/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.1/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}
buildscript {
    ext {
        springReleaseRepo = "https://repo.spring.io/libs-release"
        springSnapshotRepo = "http://repo.spring.io/snapshot"
        springMilestoneRepo = "http://repo.spring.io/milestone"

        springBootVersion = "2.1.0.BUILD-SNAPSHOT"
        hadoopVersion = "2.9.0"
        poiVersion = "3.14"
    }
    //闭包，声明了jcenter()的配置
    repositories {
        //maven
        maven { url springReleaseRepo}
        maven { url springSnapshotRepo }
        maven { url springMilestoneRepo }
		 
//	    mavenCentral()
	    mavenLocal()
//	    jcenter()

        //local
	    //flatDir{   dirs 'D:/workspace/luna/libs' }
	    
	    // ivy       
		//ivy{      url "..."  }   
    }
    //dependencies闭包，声明了一个Gradle插件
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

def vJavaLang = '1.8'

wrapper.gradleVersion = '4.8'

apply plugin: 'eclipse'
apply plugin: 'idea'
version = '1.0.0.BUILD-SNAPSHOT'

//使用 xxx
apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
//User JDK 1.8
sourceCompatibility = vJavaLang
targetCompatibility = vJavaLang

//apply plugin: 'war'
//war {
//    baseName = 'lotus'
//   version =  version
//}
jar {
    baseName = 'lotus'
    version =  version
}

repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
        //maven
        maven { url springReleaseRepo }
        maven { url springSnapshotRepo }
        maven { url springMilestoneRepo }
		
//	    mavenCentral()
	    mavenLocal()
//	    jcenter()
        //local
	    //flatDir{   dirs 'D:/workspace/luna/libs' }
	    // ivy       
		//ivy{      url "..."  }  
}


dependencies {

    //sqring
    compile "org.springframework.boot:spring-boot-starter-web:$springBootVersion"  
    compile "org.springframework.boot:spring-boot-starter-jdbc:$springBootVersion"
    compile "org.springframework.boot:spring-boot-starter-actuator:$springBootVersion"
    compile "org.springframework.boot:spring-boot-devtools:$springBootVersion" 
    compile "org.springframework.boot:spring-boot-starter-thymeleaf:$springBootVersion"
    
    //compile "org.springframework.boot:spring-boot-starter-data-mongodb:$springBootVersion"
    compile "org.springframework.boot:spring-boot-starter-data-redis:$springBootVersion"
 	//compile "org.springframework.boot:spring-boot-starter-security:$springBootVersion"
    //compile "org.springframework.session:spring-session-data-redis"

    compile "org.springframework.boot:spring-boot-starter-activemq:$springBootVersion"


 	//dom xml
    compile "dom4j:dom4j:1.6.1"
    
    //jdbc driver 
    compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.38'
    compile group: 'org.mongodb', name: 'mongo-java-driver', version: '3.2.2'
    //compile "com.oracle:ojdbc14:*.*.*"
	
	//orm mybatis 3.2.8    1.3.2
	//compile group: 'org.mybatis', name: 'mybatis' ,version: '3.2.8'
	//compile group: 'org.mybatis', name: 'mybatis-spring' ,version: '1.2.3'
	compile group: 'org.mybatis.spring.boot', name: 'mybatis-spring-boot-starter' ,version: '1.3.2'
	
	//pool Druid   1.1.10
	compile group: 'com.alibaba', name: 'druid', version: '1.1.10'
	
    //json
    compile group: 'com.alibaba', name: 'fastjson', version: '1.2.24' 
    //compile group: 'org.codehaus.jackson', name: 'jackson-mapper-asl', version: '1.9.13'
    //io
    compile "commons-fileupload:commons-fileupload:1.3.1"
    // poi   
    compile group: 'org.apache.poi', name: 'poi', version: "$poiVersion"
    compile group: 'org.apache.poi', name: 'poi-ooxml', version: "$poiVersion"
    compile group: 'org.apache.poi', name: 'poi-ooxml-schemas', version: "$poiVersion"
	
	//动态代理 类代理
	compile group: 'cglib', name: 'cglib', version: '3.1'
	
	//http 
	compile group: 'org.apache.httpcomponents',name: 'httpclient',version: '4.5.2'
	compile group: 'org.jsoup',name: 'jsoup',version: '1.10.2'
	
    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'

    //collections
    compile 'org.eclipse.collections:eclipse-collections-api:9.2.0'
    compile 'org.eclipse.collections:eclipse-collections:9.2.0'

    //mq
    // https://mvnrepository.com/artifact/org.apache.activemq/activemq-core
    compile group: 'org.apache.activemq', name: 'activemq-core', version: '5.7.0'
    // https://mvnrepository.com/artifact/org.apache.activemq/activemq-spring
    compile group: 'org.apache.activemq', name: 'activemq-spring', version: '5.15.4'

    //hadoop
    //compile group: 'org.apache.hadoop', name: 'hadoop-common', version: "$hadoopVersion"
    //compile group: 'org.apache.hadoop', name: 'hadoop-core', version: "0.20.2"
    //compile group: 'org.apache.hadoop', name: 'hadoop-hdfs', version: "$hadoopVersion"
    
    //compile group: 'org.apache.hadoop', name: 'hadoop-client', version: "$hadoopVersion"
    
    //compile ("org.apache.hadoop:hadoop-client:$hadoopVersion"){
    //   exclude group: 'org.slf4j',module: 'slf4j-log4j12'
    //}
   //compile group: 'org.apache.hadoop', name: 'hadoop-mapreduce-client-core', version: "$hadoopVersion"
   

    //testCompile
    testCompile("junit:junit:4.12") {
        exclude group:'org.hamcrest', module:'hamcrest-core'
    }
    testCompile("org.mockito:mockito-core:2.18.0") {
        exclude group:'org.hamcrest', module:'hamcrest-core'
    }
	testCompile "org.springframework.boot:spring-boot-starter-test:$springBootVersion"
}

tasks.withType(JavaCompile) {  
    options.encoding = "UTF-8"  
} 

