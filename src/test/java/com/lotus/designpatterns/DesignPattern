Design Pattern (设计模式)

1、23种设计模式  分为三大类：创建型模式（Creational Pattern）、结构型模式（Structural Pattern）、行为型模式（Behavioral Pattern）；


创建型模式

工厂模式（Factory）、抽象工厂模式（Abstract Factory）、单例模式（Singletion）、建造者模式（Builder）、原型模式（Prototype）


结构性模式

适配器模式（Adapter）、桥接模式（Bridge）、过滤器模式（Filter）、组合模式（Composite）、装饰器模式（Decorator）、外观模式（Facade）、享元模式（Flyweight）、代理模式（Proxy）


行为模式

责任链模式（Chain of Responsibility）、命令模式（Command）、解释器模式（Interpreter）、迭代器模式（Iterator）、中介则模式（Mediator）、备忘录模式（Memanto）、观察者模式（Observer）、状态模式（State）、空对象模式（Null Object）、策略模式（Strategy）、模板模式（Template）、访问者模式（Visitor）




J2EE模式

MVC模式、业务代表模式、组合实体模式、数据访问对象模式、前端控制器模式、拦截过滤器模式、服务定位器模式、传输对象模式




2、设计模式六大原则

开闭原则：实现热插拔、提高扩展性；
里氏代换原则：实现抽象的规范、实现父类互相替换；
依赖倒转原则：针对接口编程，实现开闭原则的基础
接口隔离原则：降低耦合，接口单独设计，互相隔离；
迪米特法则：又称不知道原则：功能模块尽量独立；
合并复用原则：尽量使用聚合，组合，而不是继承；



















